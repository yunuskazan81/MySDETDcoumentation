Class 29

Interface is a collection of public abstract methods and public static final (constant) variables
Using interface we can achieve multiple (1 child and 2 parent ) and hybrid (combination of 2 or more inheritamce types) inheritance

Since Java 8 we can have defined static and defined default methods in inteface(if we want to add some common behaviour to the parent interface without affecting all classes that implements that interface we can define this specific behaviour inside inteface itself by declaring it using static or defaut keyword).

Abstract Class vs Interface:
1. Class needs to be extended and interface implemented
2. to Create an abstract class we use abstract keyword to create an interface we use interface keyword
3. Using Abstract clas we can achieve partial to full abstarction , while using interface we achieve 100%/full abstraction
4. Using interafce we can achieve multiple inheritance while using class we can extends only 1
5. In abstract class we can have defined and undefined methods while in interface we can have only abstract method(from jdk 1.8 we can add default or static)
5. We can have instance methods and variables inside abstarct class while in interface we cannot!
6. In abstract class we CAN have a construtor while in interface we CANNOT
7. In Interface all variables must be initialized and they are a type of PUBLIC STATIC FINAL = CONSTANT variables while in abstract clas we can have instance and class and do not need to initialize them

ENCAPSULATION:
is a process of wrapping data and methods together in a single unit(class) 

To achieve encapsulation:
1. declare variables as PRIVATE
2. provide PUBLIC Setters and Getters

4 main OOPS Concepts:
1. Ineritance  - process of inheriting properties and behaviviours from an a 	 parent to child
	a. Single
	b. Multilevel
	c. Hierarchical

2. Polymorphism - process ob object taking many form/behaviours
	a. compile time / static/ early binding 
	b. run time / dynamic/ late binding

3. Abstraction - process of hiding implementation of our code
	a. Partial -  using Abstract class
	b. Full Abstraction  - using Interface or Abstract class

4. Encapsulation - process of wrapping data and methods together in a single 	              unit(class). Achieved using private variables and public 						 getters and setters.

