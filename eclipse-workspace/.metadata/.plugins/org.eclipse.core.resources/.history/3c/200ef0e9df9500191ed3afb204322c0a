package com.orangehrm.steps;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.junit.Assert;
import org.openqa.selenium.WebElement;

import com.orangehrm.pages.AddEmployeePage;
import com.orangehrm.pages.HomePage;
import com.orangehrm.pages.LoginPage;
import com.orangehrm.utils.CommonMethods;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import io.cucumber.datatable.DataTable;




public class OrangeAddEmpSteps extends CommonMethods{

	LoginPage login;
	HomePage home;
	AddEmployeePage emp;
	
	@Given("I logged in into OrangeHrm")
	public void i_logged_in_into_OrangeHrm() {
		login = new LoginPage();
		home = new HomePage();
		emp = new AddEmployeePage();
		login.Login(ConfigsReader.getProperty("username"), ConfigsReader.getProperty("password"));
	}

	@When("I click on PIM link")
	public void i_click_on_PIM_link() {
		click(home.PIM);
	}

	@When("I click on  Add Employee link")
	public void i_click_on_Add_Employee_link() {
		click(home.addEmployee);
	}
	
	@When("I provide {string}, {string}, {string} and {string}")
	public void i_provide_and(String fName, String mName, String lName, String location) {
		sendText(emp.EmpFirstName, fName);
		sendText(emp.middleName, mName);
		sendText(emp.EmpLastName, lName);
		click(emp.locationDropDown);
		selectList(emp.locationList, location);
	}

	@When("I click on save button")
	public void i_click_on_save_button() {
		emp.EmpSaveBtn.click();
	}
	
	@Then("I see {string}, {string} is displayed")
	public void i_see_is_displayed(String fName, String lName) {
		waitForElementBeClickable(emp.empCheck, 20);
		String empName=emp.empCheck.getText();
		Assert.assertEquals(fName+" "+lName, empName);
	}
	
	@When("I provide FirstName, MiddleName, LastName and Location")
	public void I_provide_FirstName_MiddleName_LastName_and_Location(DataTable AddEmp) {
		
		List<Map<String,String>> datalist= AddEmp.asMaps(String.class, String.class);
		
		for(int i=0; i<datalist.size(); i++) {
			
			sendText(emp.EmpFirstName, datalist.get(i).get("FirstName"));
			sendText(emp.middleName, datalist.get(i).get("MiddleName"));
			sendText(emp.EmpLastName, datalist.get(i).get("LastName"));
			emp.locationDropDown.click();
			selectList(emp.locationList, datalist.get(i).get("Location"));
			
			
		}
			
		
	
			
	}
	
	@When("I provide Username, Password and Confirmpassword")
	public void I_provide_Username_Password_and_Confirmpassword(DataTable AddEmp) {
	    
List<Map<String,String>> datalist= AddEmp.asMaps(String.class, String.class);
		
		for(int i=0; i<datalist.size(); i++) {
			
			sendText(emp.username, datalist.get(i).get("Username"));
			sendText(emp.password, datalist.get(i).get("Password"));
			sendText(emp.confirmPass, datalist.get(i).get("Confirmpassword"));
			
			
		}
	
	}
	
	
	@Then("I see employee name is added successfully")
	public void i_see_employee_name_is_added_successfully(DataTable AddEmp) {
	    
		
		ArrayList<String> list= new ArrayList<String>();
		
		List<Map<String,String>> datalist= AddEmp.asMaps(String.class, String.class);
		
		for(int i=0; i<datalist.size(); i++) {
			
			list.add(datalist.get(i).get("EmployeeName"));
			
			}
		
		String text= emp.empCheck.getText();
		if(list.contains(text)) {
			
			Assert.assertTrue(true);
			
			System.out.println("EmployeeName is added succesfully");
			
		}
		
		
	}
	
	
	@When("I click on create login details")
	public void i_click_on_create_login_details() {
	    
		emp.checkCredentials.click();
	}
	
	
	@Then("I see following labels")
	public void i_see_following_labels(DataTable addEmpLabels) {
	    
		List<String> Expectedlabels = addEmpLabels.asList();
		System.out.println("----Printing labels from cucumber dataTable----");
		for (String expectedlabel: Expectedlabels) {
			System.out.println(expectedlabel);
		}
		
		List<String> actuallable= new ArrayList<String>();
		
		System.out.println("----Printing labels text from the application----");
		
		List<WebElement> labelList=emp.addEmpLabels;
		
		for (WebElement label: labelList) {
			String labeltxt=label.getText();
			System.out.println(labeltxt);
				
			actuallable.add(labeltxt.replace("*", ""));
		}
		
		System.out.println(actuallable);
		//Assert.assertTrue(actuallable.equals(Expectedlabels));
		System.out.println("Expected labels equal to actual labels from");
		
		
	}
}